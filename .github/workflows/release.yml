name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  publish:
    name: Publishing for ${{ matrix.os }}
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        rust: [stable]
        include:
          - os: macos-latest
            artifact_prefix: macos
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            artifact_prefix: linux
            target: x86_64-unknown-linux-gnu

    steps:
      - name: Installing Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "${{ matrix.rust }}"
          override: true
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          toolchain: "${{ matrix.rust }}"
          args: --release --target "${{ matrix.target }}"
      - name: Packaging final binary
        shell: bash
        run: |
          cd "target/${{ matrix.target }}/release"
          strip ksrt
          tar czvf "ksrt-${{ matrix.artifact_prefix }}.tar.gz" ksrt
          shasum -a 256 "ksrt-${{ matrix.artifact_prefix }}.tar.gz" > "ksrt-${{ matrix.artifact_prefix }}.sha256"
      - name: Installing RPM packager
        uses: actions-rs/install@v0.1
        if: ${{ matrix.target }} == "x86_64-unknown-linux-gnu"
        with:
          crate: cargo-rpm
          version: latest
      - name: Packaging RPM
        uses: actions-rs/cargo@v1
        if: ${{ matrix.target }} == "x86_64-unknown-linux-gnu"
        with:
          command: rpm
          toolchain: "${{ matrix.rust }}"
          args: build --no-cargo-build --target "${{ matrix.target }}"
      - name: Releasing assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            "target/${{ matrix.target }}/release/ksrt-${{ matrix.artifact_prefix }}.tar.gz"
            "target/${{ matrix.target }}/release/ksrt-${{ matrix.artifact_prefix }}.sha256"
            "target/${{ matrix.target }}/release/ksrt-${{ matrix.artifact_prefix }}.rpm"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

#   publish-cargo:
#     name: Publishing to Cargo
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@master
#       - uses: actions-rs/toolchain@v1
#         with:
#           toolchain: stable
#           override: true
#       - uses: actions-rs/cargo@v1
#         with:
#           command: publish
#           args: --token {{ "${{ secrets.CARGO_API_KEY " }}}} --allow-dirty
