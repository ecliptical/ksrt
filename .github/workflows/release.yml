name: Release

on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        rust: [stable]
        include:
        - os: macos-latest
          artifact_prefix: macos
          target: x86_64-apple-darwin
        - os: ubuntu-latest
          artifact_prefix: linux
          target: x86_64-unknown-linux-gnu
    steps:
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: "${{ matrix.rust }}"
        override: true
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Execute cargo build
      uses: actions-rs/cargo@v1
      with:
        command: build
        toolchain: "${{ matrix.rust }}"
        args: --release --target "${{ matrix.target }}"
    - name: Package final binary
      shell: bash
      run: |
        cd "target/${{ matrix.target }}/release"
        strip ksrt
        tar czvf "ksrt-${{ matrix.artifact_prefix }}.tar.gz" ksrt
        shasum -a 256 "ksrt-${{ matrix.artifact_prefix }}.tar.gz" > "ksrt-${{ matrix.artifact_prefix }}.sha256"
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: "ksrt-${{ matrix.artifact_prefix }}"
        path: "target/${{ matrix.target }}/release/"

  package:
    name: Package artifacts
    needs: build
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
        include:
        - os: ubuntu-latest
          artifact_prefix: linux
          target: x86_64-unknown-linux-gnu
    steps:
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: "${{ matrix.rust }}"
        override: true
    - name: Installing RPM packager
      uses: actions-rs/install@v0.1
      with:
        crate: cargo-rpm
        version: latest
        use-tool-cache: true
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: "ksrt-${{ matrix.artifact_prefix }}"
        path: "target/release"
    - name: Build RPM
      uses: actions-rs/cargo@v1
      with:
        command: rpm
        toolchain: "${{ matrix.rust }}"
        args: build -v --no-cargo-build
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: "ksrt-rpm"
        path: "target/release/rpmbuild/RPMs/x86_64/ksrt-*.x86_64.rpm"

  release:
    name: Create release
    needs: [build, package]
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
    - name: "Show what we've got"
      shell: bash
      run: |
        pwd
        ls -l
        find . -type f
    - name: Release artifacts
      uses: softprops/action-gh-release@v1
      with:
        files: |
          "ksrt-*/ksrt-*.tar.gz"
          "ksrt-*/ksrt-*.sha256"
          "ksrt-*/ksrt-*.rpm"
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

#   publish:
#     name: Publishing to Crates.io
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@master
#     - uses: actions-rs/toolchain@v1
#       with:
#         toolchain: stable
#         override: true
#     - uses: actions-rs/cargo@v1
#       with:
#         command: publish
#         args: --token {{ "${{ secrets.CARGO_API_KEY " }}}} --allow-dirty
